@using Garza.Base.Lib;
@using System.Data;
@using Garza.Base.Models;
@model AreasPrep.Areas.Prep.Models.F1Model
<style type="text/css">
    #p_prep_f1_table_row_dd_menu {
        position: absolute;
        background-color: #fff;
        border: 1px solid black;
        padding: 4px;
        display: none;
    }

        #p_prep_f1_table_row_dd_menu tr {
            height: 24px;
        }

        #p_prep_f1_table_row_dd_menu input[type="button"] {
            width: auto;
        }

    #p_prep_f1_table_row_dd_color {
        position: absolute;
        background-color: #fff;
        border: 1px solid black;
        padding: 4px;
        display: none;
    }

        #p_prep_f1_table_row_dd_color tr {
            height: 24px;
        }

        #p_prep_f1_table_row_dd_color input[type="button"] {
            width: auto;
        }

    #p_prep_f1_table table.thead th {
        padding: 2px;
        font-weight: bold;
        text-align: center;
        border: 1px solid black;
        word-wrap: break-word;
    }

    #p_prep_f1_table table.tbody td {
        padding: 2px;
        border: 1px solid black;
        word-wrap: break-word;
        vertical-align: top;
    }

        #p_prep_f1_table table.tbody td textarea {
            font-family: Arial, sans-serif;
            font-size: 9pt;
            text-align: left;
            width: 100%;
            background-color: transparent;
            border: none;
            outline: none;
            overflow: auto;
            padding: 0;
            resize: none;
        }
</style>
<div id="p_prep_f1_table">
    <input type="hidden" class="data-spec-id" value="@Model.Id" />
    <input type="hidden" class="spec_as_json_string" value="@Model.SpecDataSetAsJsonString" />
    <!--заголовок выделен в отдельную секцию, чтобы не сдвигался при прокрутке-->
    <div class="thead">
        <table class="thead" style="width: 0px; table-layout: fixed">
            <colgroup>
                <!--col width="0" /><!--id</col><!-- 0 -->
                <!--col width="0" /><!--код_спецификации</col><!-- 1 -->
                <col width="20" /><!--№</col><!-- 2 -->
                <col width="120" /><!--МНН</col><!-- 3 -->
                <col width="240" /><!--Требуемое значение</col><!-- 4 -->
                <!--col width="0" /><!--Кол-во в требовании</col><!-- 5 -->
                <!--col width="0" /><!--Ед. изм. в требовании</col><!-- 6 -->
                <col width="120" /><!--Наименование</col><!-- 7 -->
                <col width="240" /><!--Лекарственная форма, дозировка, упаковка</col><!-- 8 -->
                <col width="140" /><!--Производитель</col><!-- 9 -->
                <col width="70" /><!--Страна</col><!-- 10 -->
                <col width="60" /><!--Ед. изм.</col><!-- 11 -->
                <!--col width="0" /><!--Начальная максимальная цена</col><!-- 12 -->
                <col width="70" /><!--Рег. цена</col><!-- 13 -->
                <col width="60" /><!--Кол-во</col><!-- 14 -->
                <col width="70" /><!--Цена закупки</col><!-- 15 -->
                <col width="80" /><!--Сумма закупки</col><!-- 16 -->
                <col width="80" /><!--Примечание</col><!-- 17 -->
                <!--col width="0" /><!--Цена по спецификации</col><!-- 18 -->
                <!--col width="0" /><!--Сумма по спецификации</col><!-- 19 -->
                <!--col width="0" /><!--tp_id</col><!-- 20 -->
                <!--col width="0" /><!--Сведения о сертификации</col><!-- 21 -->
                <col width="70" /><!--Вес</col><!-- 22 -->
                <col width="70" /><!--Объём</col><!-- 23 -->
                <!--col width="0" /><!--bg_color</col><!-- 24 -->
                <!--col width="0" /><!--gr_item_id</col><!-- 25 -->
                <!--col width="0" /><!--gr_mnft_id</col><!-- 26 -->
                <!--col width="0" /><!--fs_item_code</col><!-- 27 -->
                <col width="80" /><!--предельная_оптовая_цена</col><!-- 28 -->
                <!--col width="80" /><!--предельная_оптовая_сумма</col><!-- 29 -->
                <!--col width="80" /><!--предельная_розничная_цена</col><!-- 30 -->
                <!--col width="80" /><!--предельная_розничная_сумма</col><!-- 31 -->
                <col width="80" /><!--цена_продажи</col><!-- 32 -->
                <!--col width="80" /><!--сумма_продажи</col><!-- 33 -->
                <!--col width="0" /><!--uid</col><!-- 34 -->
            </colgroup>
            <tbody>
                <tr>
                    <th style="display: none;" data-db-name="id">id</th><!-- 0 -->
                    <th style="display: none;" data-db-name="код_спецификации">код_спецификации</th><!-- 1 -->
                    <th data-db-name="номер_строки">№</th><!-- 2 -->
                    <th data-db-name="международное_непатентованное_наименование">МНН</th><!-- 3 -->
                    <th style="border-right: double" data-db-name="требование">Техническая характеристика</th><!-- 4 -->
                    <th style="display: none;" data-db-name="количество_в_требовании">Кол-во в требовании</th><!-- 5 -->
                    <th style="display: none;" data-db-name="ед_изм_в_требовании">Ед. изм. в требовании</th><!-- 6 -->
                    <th data-db-name="наименование">Наименование</th><!-- 7 -->
                    <th data-db-name="лекарственная_форма_и_дозировка">Лекарственная форма, дозировка, упаковка</th><!-- 8 -->
                    <th data-db-name="производитель">Производитель</th><!-- 9 -->
                    <th data-db-name="страна">Страна</th><!-- 10 -->
                    <th data-db-name="ед_изм">Ед. изм.</th><!-- 11 -->
                    <th style="display: none;" data-db-name="начальная_максимальная_цена">Начальная максимальная цена</th><!-- 12 -->
                    <th data-db-name="рег_цена">Рег. цена</th><!-- 13 -->
                    <th data-db-name="количество">Кол-во</th><!-- 14 -->
                    <th data-db-name="цена_закуп">Цена закупки</th><!-- 15 -->
                    <th data-db-name="сумма_закуп">Сумма закупки</th><!-- 16 -->
                    <th data-db-name="примечание">Примечание</th><!-- 17 -->
                    <th style="display: none;" data-db-name="цена_по_спецификации">Цена по спецификации</th><!-- 18 -->
                    <th style="display: none;" data-db-name="сумма_по_спецификации">Сумма по спецификации</th><!-- 19 -->
                    <th style="display: none;" data-db-name="tp_id">tp_id</th><!-- 20 -->
                    <th style="display: none;" data-db-name="номер_ру">Сведения о сертификации</th><!-- 21 -->
                    <th data-db-name="вес">Вес</th><!-- 22 -->
                    <th data-db-name="объём">Объём</th><!-- 23 -->
                    <th style="display: none;" data-db-name="bg_color">bg_color</th><!-- 24 -->
                    <th style="display: none;" data-db-name="gr_item_id">gr_item_id</th><!-- 25 -->
                    <th style="display: none;" data-db-name="gr_mnft_id">gr_mnft_id</th><!-- 26 -->
                    <th style="display: none;" data-db-name="fs_item_code">fs_item_code</th><!-- 27 -->
                    <th data-db-name="предельная_оптовая_цена">Предельная оптовая цена</th><!-- 28 -->
                    <th style="display: none;" data-db-name="предельная_оптовая_сумма">Предельная оптовая сумма</th><!-- 29 -->
                    <th style="display: none;" data-db-name="предельная_розничная_цена">Предельная розничная цена</th><!-- 30 -->
                    <th style="display: none;" data-db-name="предельная_розничная_сумма">Предельная розничная сумма</th><!-- 31 -->
                    <th data-db-name="цена_по_спецификации">Цена продажи</th><!-- 32 -->
                    <th style="display: none;" data-db-name="сумма_по_спецификации">Сумма продажи</th><!-- 33 -->
                    <th style="display: none;" data-db-name="uid">uid</th><!-- 34 -->
                </tr>
            </tbody>
        </table>
    </div>
    <!--данные в отдельной секции с прокруткой-->
    <div class="tbody" style="height: 320px; overflow-x: hidden; overflow-y: auto;">
        <table class="tbody" style="width: 0px; table-layout: fixed">
            <!-- colgroup - будет добавлено в js -->
            <tbody>
                <tr class="list_row" data-edit-status="">
                    <td style="display: none;"></td><!-- 0 -->
                    <td style="display: none;"></td><!-- 1 -->
                    <td></td><!-- 2 -->
                    <td></td><!-- 3 -->
                    <td style="border-right: double"></td><!-- 4 -->
                    <td style="display: none;"></td><!-- 5 -->
                    <td style="display: none;"></td><!-- 6 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft"></textarea></div></td><!-- 7 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft"></textarea></div></td><!-- 8 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft"></textarea></div></td><!-- 9 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft"></textarea></div></td><!-- 10 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft"></textarea></div></td><!-- 11 -->
                    <td style="display: none;"></td><!-- 12 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft" style="text-align: right;"></textarea></div></td><!-- 13 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft" style="text-align: right;"></textarea></div></td><!-- 14 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft" style="text-align: right;"></textarea></div></td><!-- 15 -->
                    <td style="text-align: right;"></td><!-- 16 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft"></textarea></div></td><!-- 17 -->
                    <td style="display: none;"></td><!-- 18 -->
                    <td style="display: none;"></td><!-- 19 -->
                    <td style="display: none;"></td><!-- 20 -->
                    <td style="display: none;"></td><!-- 21 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft" style="text-align: right;"></textarea></div></td><!-- 22 -->
                    <td><div style="padding-right: 4px;"><textarea rows="5" wrap="soft" style="text-align: right;"></textarea></div></td><!-- 23 -->
                    <td style="display: none;"></td><!-- 24 -->
                    <td style="display: none;"></td><!-- 25 -->
                    <td style="display: none;"></td><!-- 26 -->
                    <td style="display: none;"></td><!-- 27 -->
                    <td style="text-align: right;"></td><!-- 28 -->
                    <td style="display: none; text-align: right;"></td><!-- 29 -->
                    <td style="display: none; text-align: right;"></td><!-- 30 -->
                    <td style="display: none; text-align: right;"></td><!-- 31 -->
                    <td style="text-align: right;"></td><!-- 32 -->
                    <td style="display: none; text-align: right;"></td><!-- 33 -->
                    <td style="display: none;"></td><!-- 34 -->
                </tr>
            </tbody>
        </table>
    </div>
    <!-- Выпадающее меню для строки в таблице -->
    <div id="p_prep_f1_table_row_dd_menu">
        <table>
            <tr><td style="text-align:right;"><input type="button" value="X" onclick="$('#p_prep_f1_table_row_dd_menu').hide();" /></td></tr>
            <tr><td><input type="button" value="Вставить строку." onclick="PrepF1Table.insertRow();" /></td></tr>
            <tr><td><input type="button" value="Заменить строку." onclick="PrepF1Table.replaceRow();" /></td></tr>
            <tr><td><input type="button" value="Удалить строку." onclick="PrepF1Table.deleteRow();" /></td></tr>
            <tr><td><input type="button" value="Покрасить строку." onclick="PrepF1Table.showColorRowMenu();" /></td></tr>
            <tr><td><input type="button" value="Очистить поле 'МНН'." onclick="PrepF1Table.clearMnn();" /></td></tr>
            <tr><td><input type="button" value="Сохранить таблицу." onclick="PrepF1Table.saveV2();" /></td></tr>
            <tr><td><input type="button" value="Выгрузить в Excel." onclick="PrepF1Table.saveAsExcel();" /></td></tr>
            <tr><td><input type="button" value="Сформировать запрос." onclick="PrepF1Table.createQuery();" /></td></tr>
        </table>
    </div>
    <!-- Выпадающее меню для выбора цвета -->
    <div id="p_prep_f1_table_row_dd_color">
        <table>
            <tr><td style="text-align:right;"><input type="button" value="X" onclick="$('#p_prep_f1_table_row_dd_color').hide();" /></td></tr>
            <tr><td onclick="PrepF1Table.colorRow('#ffffff');" style="background-color: #ffffff; width: 100px;"></td></tr>
            <tr><td onclick="PrepF1Table.colorRow('#ffffcc');" style="background-color: #ffffcc; width: 100px;"></td></tr>
            <tr><td onclick="PrepF1Table.colorRow('#ffccff');" style="background-color: #ffccff; width: 100px;"></td></tr>
            <tr><td onclick="PrepF1Table.colorRow('#ccffff');" style="background-color: #ccffff; width: 100px;"></td></tr>
        </table>
    </div>
    <!-- Окно для запроса поставщику -->
    <div id="p_prep_f1_q"
         style="position: absolute; top: 100px; left: 240px; border: 1px solid black; display: none; overflow: auto; background-color: #ffffff;">
        <table>
            <tr><td style="text-align:right;"><input type="button" value="X" onclick="$('#p_prep_f1_q').hide();" /></td></tr>
            <tr><td><div style="width: 210mm; height: 296mm; padding: 10mm; background-color: #eeeeee;"><div style="background-color: #ffffff">&nbsp;</div></div></td></tr>
        </table>
    </div>
</div>
<script type="text/javascript">
    var PrepF1Table = (function () {
        var main = $('#p_prep_f1_table');
        var specId = main.find('> input.data-spec-id').val();
        var specDataSetAsJsonString = main.find('> input.spec_as_json_string').val();
        var specDs = Nskd.Data.DataSet(Nskd.Json.parse(specDataSetAsJsonString));
        var specTable = (specDs && specDs.tables && specDs.tables.length > 1) ? specDs.tables[1] : null;
        var ddMenu = $('#p_prep_f1_table_row_dd_menu');
        var ddColor = $('#p_prep_f1_table_row_dd_color');
        var selectedRow = null;
        var selectedRowOldBackgroundColor = 'transparent';
        var top = null;
        var left = null;
        var replaceMode = false;
        var totalChangeHandlers = [];

        var colgroupTemplate = main.find('div.thead > table > colgroup');
        var trTemplate = main.find('div.tbody > table > tbody > tr:eq(0)');

        main.find('div.tbody > table').append(colgroupTemplate.clone());
        main.find('div.tbody > table > tbody').empty().append(generateTableTbody(trTemplate));

        var ths = main.find('table.thead th');
        var tableBody = main.find('table.tbody tbody');

        $('.list_row').click(function (e) {
            selectRow(this);
        });
        $('.list_row').dblclick(function (e) {
            PrepF1Table.replaceRow();
        });
        $('body').on('contextmenu', false);
        $('.list_row').mouseup(showDdMenu);
        $('.list_row input').change(rowChange);
        $('.list_row textarea').change(rowChange);
        function onTotalChange(total1, total2, total3, total4) {
            for (var hi = 0; hi < totalChangeHandlers.length; hi++) {
                totalChangeHandlers[hi](total1, total2, total3, total4);
            }
        }
        function calcAndShowTableSum() {
            // пересчитать итоги по таблице
            var total1 = 0;
            var total2 = 0;
            var total3 = 0;
            var total4 = 0;
            tableBody.find('tr:visible').each(function (tri, tr) {
                // Сумма закуп.
                var trs1 = parseFloat($(getTdByDbName(tr, 'сумма_закуп')).text());
                if (isNaN(trs1)) trs1 = 0;
                total1 += trs1;
                // Предельная оптовая сумма
                var trs2 = parseFloat($(getTdByDbName(tr, 'предельная_оптовая_сумма')).text());
                if (isNaN(trs2)) trs2 = 0;
                total2 += trs2;
                // Предельная розничная сумма
                var trs3 = parseFloat($(getTdByDbName(tr, 'предельная_розничная_сумма')).text());
                if (isNaN(trs3)) trs3 = 0;
                total3 += trs3;
                // Сумма продажи
                var trs4 = parseFloat($(getTdByDbName(tr, 'сумма_по_спецификации')).text());
                if (isNaN(trs4)) trs4 = 0;
                total4 += trs4;
            });
            // передать итоги по таблице вызывающему коду
            onTotalChange(total1, total2, total3, total4);
        }
        function dateToString(d) {
            var r = '';
            if (d != null) {
                d.setTime(d.getTime() + (4 * 3600000));
                var dd = d.getDate();
                var mm = (d.getMonth() + 1);
                var yyyy = d.getFullYear();
                r = '' + ((dd < 10) ? '0' + dd : dd) + '.' + ((mm < 10) ? '0' + mm : mm) + '.' + yyyy;
            }
            return r;
        }
        function createRow() {
            var visibleRowsLength = tableBody.find('tr:visible').length;
            var tr = trTemplate.clone();
            tr.attr('data-edit-status', 'i');
            tr.find('td:eq(1)').text(specId);
            tr.find('td:eq(2)').text(visibleRowsLength + 1);
            tr.find('td:eq(20)').text('{' + Nskd.Js.guid() + '}');
            tr.find('td:eq(34)').text('{' + Nskd.Js.guid() + '}');
            tr.dblclick(PrepF1Table.replaceRow);
            tr.mouseup(showDdMenu);
            tr.find('input').change(rowChange);
            tr.find('textarea').change(rowChange);
            tr.click(function () { selectRow(this); });
            return tr;
        }
        function setCells(row, ods, rCode, fCode, uCode, sCode, cCode, ocData) {
            var tr = row[0];
            var isFUpdateable = $('#p_prep_f1_panel_selector_f').prop('checked');
            var isUVisible = $('#p_prep_f1_panel_selector_u').prop('checked');
            var isNVisible = $('#p_prep_f1_panel_selector_n').prop('checked');
            var rRow = ods.r.getRowByKey(rCode);
            var fRow = ods.f.getRowByKey(fCode);
            var uRow = ods.u.getRowByKey(uCode);
            var sRow = ods.s.getRowByKey(sCode);

            var tdMnn = $(getTdByDbName(tr, 'международное_непатентованное_наименование'));
            if (tdMnn.text().length == 0) { // МНН заполняем только если он пуст
                tdMnn.text((rRow == null) ? '' : rRow.itemArray[ods.r13ci]);
            }
            var t7 = (rRow == null) ? '' : rRow.itemArray[ods.r12ci];
            $(getTdByDbName(tr, 'наименование')).find('textarea').val(t7);
            if (isFUpdateable) {
                var t8 = ((fRow == null) ? '' : (fRow.itemArray[ods.f2ci] + '; ')) +
                            ((fRow == null) ? '' : (fRow.itemArray[ods.f3ci] + '; ')) +
                            ((isUVisible) ? ((uRow == null) ? '' : (uRow.itemArray[ods.u2ci] + '; ')) : '') +
                            ((isNVisible) ? ((uRow == null) ? '' : ('№' + uRow.itemArray[ods.u5ci])) : '');
                $(getTdByDbName(tr, 'лекарственная_форма_и_дозировка')).find('textarea').val(t8);
            }
            var t9 = (sRow == null) ? '' : sRow.itemArray[ods.s3ci];
            var t10 = (sRow == null) ? '' : sRow.itemArray[ods.s5ci];
            var t13 = ((uRow == null) || (uRow.itemArray[ods.u8ci] == null)) ? '' : uRow.itemArray[ods.u8ci];
            var t21 = 'Регистрационное удостоверение ' + ((rRow == null) ? '' : rRow.itemArray[ods.r4ci]) + ' от ' + ((rRow == null) ? '' : dateToString(rRow.itemArray[ods.r5ci]));
            $(getTdByDbName(tr, 'производитель')).find('textarea').val(t9);
            $(getTdByDbName(tr, 'страна')).find('textarea').val(t10);
            $(getTdByDbName(tr, 'рег_цена')).find('textarea').val(t13);
            $(getTdByDbName(tr, 'номер_ру')).text(t21);
            $(getTdByDbName(tr, 'gr_item_id')).text(uCode);
            $(getTdByDbName(tr, 'gr_mnft_id')).text(sCode);
            $(getTdByDbName(tr, 'fs_item_code')).text(cCode);
            try {
                if(ocData) {
                    var a0 = ocData.a;
                    if (typeof a0 === 'number' && a0 > 0) {
                        var a = parseFloat($(getTdByDbName(tr, 'количество')).find('textarea').val());
                        if (!isNaN(a)) {
                            $(getTdByDbName(tr, 'вес')).find('textarea').val((ocData.w * (a / a0)).toFixed(3));
                            $(getTdByDbName(tr, 'объём')).find('textarea').val((ocData.v * ((a / a0) /* + (a % a0) / a0 * 0.1 */)).toFixed(6));
                        }
                    }
                }
            } catch (e) { alert(e.name + ': ' + e.message + '\n'); }
        }
        function rowChange() {
            var tr = this.parentNode.parentNode.parentNode;
            // надо отметить что строка изменилась
            if (tr.getAttribute('data-edit-status') != 'i') {
                tr.setAttribute('data-edit-status', 'u');
            }

            // пресчитать итоги по строке
            {
                // Кол-во
                var i1 = $(getTdByDbName(tr, 'количество')).find('textarea');
                var a = parseFloat(i1.val().replace(',', '.'));
                if (isNaN(a)) a = 1;
                i1.val(a.toFixed(0));

                // Цена закуп.
                var i2 = $(getTdByDbName(tr, 'цена_закуп')).find('textarea');
                var v2 = parseFloat(i2.val().replace(',', '.'));
                if (isNaN(v2)) v2 = 0;
                i2.val(v2.toFixed(2));

                // Предельная оптовая цена
                var i3 = $(getTdByDbName(tr, 'предельная_оптовая_цена'));
                var v3 = parseFloat(i3.text().replace(',', '.'));
                if (isNaN(v3)) v3 = 0;

                // Предельная розничная цена
                var i4 = $(getTdByDbName(tr, 'предельная_розничная_цена'));
                var v4 = parseFloat(i4.text().replace(',', '.'));
                if (isNaN(v4)) v4 = 0;

                // Цена продажи
                var i5 = $(getTdByDbName(tr, 'цена_по_спецификации'));
                var v5 = parseFloat(i5.text().replace(',', '.'));
                if (isNaN(v5)) v5 = 0;
            }

            // вывести итоги по строке
            {
                // Сумма закупки
                var s2 = a * v2;
                $(getTdByDbName(tr, 'сумма_закуп')).text((s2) ? s2.toFixed(2) : '');

                // Предельная оптовая сумма
                var s3 = a * v3;
                $(getTdByDbName(tr, 'предельная_оптовая_сумма')).text((s3) ? s3.toFixed(2) : '');

                // Предельная розничная сумма
                var s4 = a * v4;
                $(getTdByDbName(tr, 'предельная_розничная_сумма')).text((s4) ? s4.toFixed(2) : '');

                // Сумма продажи
                var s5 = a * v5;
                $(getTdByDbName(tr, 'сумма_по_спецификации')).text((s5) ? s5.toFixed(2) : '');
            }

            // пересчитать и вывести итоги по таблице
            calcAndShowTableSum();

            // выделить жирным шрифтом кол-во и ед. изм.
            var c1 = $(getTdByDbName(tr, 'ед_изм'));
            var c2 = $(getTdByDbName(tr, 'ед_изм_в_требовании'));
            var c3 = $(getTdByDbName(tr, 'количество'));
            var c4 = $(getTdByDbName(tr, 'количество_в_требовании'));
            c1.find('textarea').css('font-weight', ((c1.find('textarea').val() != c2.text()) ? 'bold' : 'normal'));
            c3.find('textarea').css('font-weight', ((c3.find('textarea').val() != c4.text()) ? 'bold' : 'normal'));
        }
        function selectRow(row) {
            if (selectedRow) {
                selectedRow.css('background-color', selectedRowOldBackgroundColor);
            }
            selectedRow = $(row);
            selectedRowOldBackgroundColor = selectedRow.css('background-color');
            selectedRow.css('background-color', '#ffffaa');
        }
        function showDdMenu(e) {
            if (e.which == 3) {
                selectRow(this);
                top = (e.pageY > ($(window).outerHeight() / 2)) ? e.pageY - ddMenu.outerHeight() : e.pageY;
                left = (e.pageX > ($(window).outerWidth() / 2)) ? e.pageX - ddMenu.outerWidth() : e.pageX;
                if ((typeof PageZIndex) === "number") { ddMenu.zIndex(++PageZIndex); }
                ddMenu.show().offset({ top: top, left: left });
            }
        }
        function downloadExelFile() {
            var body = $(document.body);
            var guid = Nskd.Js.guid();

            var iframe = $('<iframe name="' + guid + '" style="display: none;" />');
            iframe.appendTo(body);

            var form = $('<form ' +
                'method="post" ' +
                'action="/Prep/F1/DownloadExcelFile/' + Math.floor(Math.random() * 1000000000) + '" ' +
                'target="' + guid + '" ' +
                'enctype="multipart/form-data" ' +
                'style="display: none;" ' +
                'onsubmit="return false;"' +
                '></form>');
            form.append('<input type="hidden" name="specId" value="' + specId + '" />');
            form.append('<input type="hidden" name="sessionId" value="' + Nskd.Server.SessionId + '" />');
            form.appendTo(body);

            form[0].submit();
            body[0].removeChild(form[0]);
            form[0] = null;
        }
        function getTdByDbName(tr, dbName) {
            for (var i = 0; i < ths.length; i++) {
                if (ths.eq(i).attr('data-db-name') === dbName) {
                    return tr.getElementsByTagName('td')[i];
                }
            }
        }
        function generateTableTbody(trTemplate) {
            var trs = [];
            //пустая строка для совместимости со старой версией в которой был заголовок
            trs.push($('<tr style="display: none">'));
            // строчки данных
            if (specTable && specTable.rows) {
                for (var ri = 0; ri < specTable.rows.length; ri++) {
                    var row = specTable.rows[ri];

                    var cells = row.itemArray;
                    cells.s = function (colName) {
                        var v = this[specTable.gci(colName)];
                        return (v) ? '' + v : '';
                    }
                    cells.d = function (colName, fraction) {
                        if (typeof fraction !== 'number') fraction = 2;
                        var v = this[specTable.gci(colName)];
                        if (typeof v === 'number') {
                            return v.toFixed(fraction);
                        }
                        else {
                            return (v) ? '' + v : '';
                        }
                    }

                    var tr = trTemplate.clone();
                    var tds = tr.find('td');
                    var bgColor = cells.s('bg_color');
                    if (bgColor) {
                        tr.css('background-color', '#' + bgColor);
                    }
                    var b1 = (cells.s('ед_изм_в_требовании') == cells.s('ед_изм')) ? 'normal' : 'bold';
                    var b2 = (cells.d('количество_в_требовании') == cells.d('количество')) ? '' : ' font-weight: bold;';

                    tds.eq(0).text(cells.d('id', 0));
                    tds.eq(1).text(cells.d('код_спецификации', 0));
                    tds.eq(2).text(cells.d('номер_строки', 0));
                    tds.eq(3).text(cells.s('международное_непатентованное_наименование'));
                    tds.eq(4).text(cells.s('требование'));
                    tds.eq(5).text(cells.d('количество_в_требовании', 0));
                    tds.eq(6).text(cells.s('ед_изм_в_требовании'));
                    tds.eq(7).find('textarea').val(cells.s('наименование'));
                    tds.eq(8).find('textarea').val(cells.s('лекарственная_форма_и_дозировка'));
                    tds.eq(9).find('textarea').val(cells.s('производитель'));
                    tds.eq(10).find('textarea').val(cells.s('страна'));
                    tds.eq(11).find('textarea').val(cells.s('ед_изм')).css('font-weight', b1);
                    tds.eq(12).text(cells.d('начальная_максимальная_цена'));
                    tds.eq(13).find('textarea').val(cells.d('рег_цена'));
                    tds.eq(14).find('textarea').val(cells.d('количество', 0)).css('font-weight', b2);
                    tds.eq(15).find('textarea').val(cells.d('цена_закуп'));
                    tds.eq(16).text(cells.d('сумма_закуп'));
                    tds.eq(17).find('textarea').val(cells.s('примечание'));
                    tds.eq(18).text(cells.d('цена_по_спецификации'));
                    tds.eq(19).text(cells.d('сумма_по_спецификации'));
                    tds.eq(20).text(cells.s('tp_id'));
                    tds.eq(21).text(cells.s('номер_ру'));
                    tds.eq(22).find('textarea').val(cells.d('вес', 3));
                    tds.eq(23).find('textarea').val(cells.d('объём', 6));
                    tds.eq(24).text(cells.s('bg_color'));
                    tds.eq(25).text(cells.d('gr_item_id', 0));
                    tds.eq(26).text(cells.d('gr_mnft_id', 0));
                    tds.eq(27).text(cells.d('fs_item_code', 0));
                    tds.eq(28).text(cells.d('предельная_оптовая_цена'));
                    tds.eq(29).text(cells.d('предельная_оптовая_сумма'));
                    tds.eq(30).text(cells.d('предельная_розничная_цена'));
                    tds.eq(31).text(cells.d('предельная_розничная_сумма'));
                    tds.eq(32).text(cells.d('цена_по_спецификации'));
                    tds.eq(33).text(cells.d('сумма_по_спецификации'));
                    tds.eq(34).text(cells.s('uid'));

                    trs.push(tr);
                }
            }
            return trs;
        }
        /*
        function numberToString(n, p, f) {
            // преобразует число 'n' в строку с минимальной точностью 'p'. 
            // 'f' число знаков после десятичной точки. Если 'f' <= 0 то десятичной точки нет.
            var r = '';
            if ((typeof n === 'number') || (n instanceof Number)) {
                r = n.toFixed(2);
            }
        }
        */
        return {
            addRow: function (ods, rCode, fCode, uCode, sCode, cCode, ocData) {
                var row;
                if (!replaceMode) {
                    row = createRow();
                    setCells(row, ods, rCode, fCode, uCode, sCode, cCode, ocData);
                    tableBody.append(row);
                } else {
                    replaceMode = false;
                    row = selectedRow;
                    row.css('background-color', 'transparent');
                    setCells(row, ods, rCode, fCode, uCode, sCode, cCode, ocData);
                    if (row.attr('data-edit-status') != 'i') {
                        row.attr('data-edit-status', 'u');
                    }
                }
                row.find('textarea:eq(0)').focus();
                return;
            },
            insertRow: function () {
                ddMenu.hide();
                var row = createRow();
                selectedRow.before(row);
                selectedRow.parent().find('tr:visible').each(function (i, tr) {
                    $(getTdByDbName(tr, 'номер_строки')).text((i + 1).toString());
                });
                selectedRow = row;
                replaceMode = true;
                selectedRow.css('background-color', '#bdf');
                row.find('textarea:eq(0)').focus();
            },
            replaceRow: function () {
                ddMenu.hide();
                replaceMode = true;
                // перенос МНН в MnnSelector
                var mnn = $(getTdByDbName(selectedRow[0], 'международное_непатентованное_наименование')).text();
                MnnSelector.setMnn(mnn);
                // перенос МНН в TnSelector
                TnSelector.setMnn(mnn);
                // сбросить предыдущие данные
                TnSelector.clearInputs();
                // перенос Наименования
                var n = $(getTdByDbName(selectedRow[0], 'наименование')).text();
                if (n) {
                    TnSelector.setN(n);
                }
                // перенос первого слова, как Форма
                var text = $(getTdByDbName(selectedRow[0], 'требование')).text();
                var f = /^\s*[\wА-ЯЁа-яё]+/.exec(text);
                if (f) {
                    TnSelector.setF(f);
                }
                // перенос первой цифры, как Дозировка
                var d = /(\d+)/.exec(text);
                if (d != null && d.length > 1) {
                    TnSelector.setD(d[1]);
                }
                // перенос №, как Кол-во
                var i = text.indexOf('№');
                if (i >= 0) {
                    var q = /(\d+)/.exec(text.substring(i + 1, text.length));
                    if (q != null && q.length > 1) {
                        TnSelector.setQ(q[1]);
                    }
                }
                // поиск первой страницы
                TnSelector.find(1);
            },
            deleteRow: function () {
                ddMenu.hide();
                if (confirm('Удалить?')) {
                    var tr = selectedRow;
                    tr.attr('data-edit-status', 'd');
                    tr.css('display', 'none');
                    tr.parent().find('tr:visible').each(function (rowIndex, tr) {
                        $(getTdByDbName(tr, 'номер_строки')).text((rowIndex + 1).toString());
                    });
                    selectedRow = null;
                }
                // пересчитать и вывести итоги по таблице
                calcAndShowTableSum();
            },
            showColorRowMenu: function () {
                ddMenu.hide();
                ddColor.show().offset({ top: top, left: left });
            },
            colorRow: function (value) {
                ddColor.hide();
                selectedRow.css('background-color', value);
                selectedRowOldBackgroundColor = selectedRow.css('background-color');
                if (selectedRow) {
                    $(getTdByDbName(selectedRow[0], 'bg_color')).text(value);
                    if (selectedRow.attr('data-edit-status') != 'i') {
                        selectedRow.attr('data-edit-status', 'u');
                    }
                }
            },
            clearMnn: function () {
                ddMenu.hide();
                $(getTdByDbName(selectedRow[0], 'международное_непатентованное_наименование')).text('');
                if (row.attr('data-edit-status') != 'i') {
                    row.attr('data-edit-status', 'u');
                }
            },
            saveV2: function (doneFunction) {
                ddMenu.hide();
                var rqp = {
                    SessionId: Nskd.Server.SessionId,
                    Command: 'Prep.F1.SaveTableV2',
                    Parameters: []
                };
                var ri = 0;
                tableBody.find('tr').each(function (tri, tr) {
                    if (tri > 0) { // пропускаем заголовок
                        var row = $(tr);
                        var status = row.attr('data-edit-status');
                        if (status) { // отправляем только те строки у которых status '[iud]'
                            row.attr('data-edit-status', '');
                            rqp.Parameters.push({ Name: '[' + ri + '][status]', Value: status });
                            row.find('td').each(function (tdi, td) {
                                var value;
                                if (td.hasChildNodes()
                                    && td.firstChild.nodeName == 'DIV'
                                    && td.firstChild.hasChildNodes()
                                    && td.firstChild.firstChild.nodeName == 'INPUT') {
                                    value = td.firstChild.firstChild.value;
                                } else if (td.hasChildNodes()
                                    && td.firstChild.nodeName == 'DIV'
                                    && td.firstChild.hasChildNodes()
                                    && td.firstChild.firstChild.nodeName == 'TEXTAREA') {
                                    value = td.firstChild.firstChild.value;
                                } else {
                                    value = $(td).text();
                                }
                                rqp.Parameters.push({ Name: '[' + ri + '][' + ths.eq(tdi).attr('data-db-name') + ']', Value: value });
                            });
                            ri++;
                        }
                    }
                });
                Nskd.Http.post({
                    url: '/Prep/F1/SaveTableV2',
                    rqp: rqp,
                    done: doneFunction
                });
            },
            saveAsExcel: function () {
                // сохраняем
                // и после сохранения пробуем скачать Excel вариант
                PrepF1Table.saveV2(downloadExelFile);
            },
            addTotalChangeHandler: function (handler) {
                if (typeof handler === 'function') {
                    totalChangeHandlers.push(handler);
                }
            },
            createQuery: function () {
                ddMenu.hide();
                var body = $(document.body);
                var specRowId = $(getTdByDbName(selectedRow[0], 'id')).text();
                var rqp = {
                    SessionId: Nskd.Server.SessionId,
                    Parameters: [
                        { Name: 'specId', Value: specId },
                        { Name: 'specRowId', Value: specRowId }
                    ]
                };
                data = Nskd.Json.toString(rqp);
                $.post('/Prep/F4/Index', data, function (data) {
                    var q = $('#p_prep_f1_q');
                    q.find('tr:eq(1) > td > div > div').html(data);
                    q.show();
                });
            }
        };
    })();
</script>
